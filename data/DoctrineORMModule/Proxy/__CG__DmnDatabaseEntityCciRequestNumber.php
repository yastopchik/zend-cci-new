<?php

namespace DoctrineORMModule\Proxy\__CG__\DmnDatabase\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CciRequestNumber extends \DmnDatabase\Entity\CciRequestNumber implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'id', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'workorder', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'numblank', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'dateorder', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'file', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'destinationiso', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'dateacceped', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'statusid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'formsid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'executorid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'priorityid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'userid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'numdoplist'];
        }

        return ['__isInitialized__', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'id', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'workorder', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'numblank', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'dateorder', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'file', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'destinationiso', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'dateacceped', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'statusid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'formsid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'executorid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'priorityid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'userid', '' . "\0" . 'DmnDatabase\\Entity\\CciRequestNumber' . "\0" . 'numdoplist'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CciRequestNumber $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkorder($workorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkorder', [$workorder]);

        return parent::setWorkorder($workorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkorder', []);

        return parent::getWorkorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumblank($numblank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumblank', [$numblank]);

        return parent::setNumblank($numblank);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumblank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumblank', []);

        return parent::getNumblank();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateorder($dateorder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateorder', [$dateorder]);

        return parent::setDateorder($dateorder);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateorder', []);

        return parent::getDateorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestinationiso($destinationiso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestinationiso', [$destinationiso]);

        return parent::setDestinationiso($destinationiso);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumDopList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumDopList', []);

        return parent::getNumDopList();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumDopList($numdoplist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumDopList', [$numdoplist]);

        return parent::setNumDopList($numdoplist);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinationiso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinationiso', []);

        return parent::getDestinationiso();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateacceped($dateacceped)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateacceped', [$dateacceped]);

        return parent::setDateacceped($dateacceped);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateacceped()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateacceped', []);

        return parent::getDateacceped();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusid(\DmnDatabase\Entity\CciStatus $statusid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusid', [$statusid]);

        return parent::setStatusid($statusid);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusid', []);

        return parent::getStatusid();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormsid(\DmnDatabase\Entity\CciForms $formsid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormsid', [$formsid]);

        return parent::setFormsid($formsid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormsid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormsid', []);

        return parent::getFormsid();
    }

    /**
     * {@inheritDoc}
     */
    public function setExecutorid(\DmnDatabase\Entity\CciUser $executorid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExecutorid', [$executorid]);

        return parent::setExecutorid($executorid);
    }

    /**
     * {@inheritDoc}
     */
    public function getExecutorid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExecutorid', []);

        return parent::getExecutorid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriorityid(\DmnDatabase\Entity\CciPriority $priorityid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriorityid', [$priorityid]);

        return parent::setPriorityid($priorityid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriorityid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriorityid', []);

        return parent::getPriorityid();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserid(\DmnDatabase\Entity\CciUser $userid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserid', [$userid]);

        return parent::setUserid($userid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserid', []);

        return parent::getUserid();
    }

}
